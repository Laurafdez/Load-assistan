services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: loads_db
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user", "-d", "loads_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
    container_name: load_api
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    env_file:
      - .env
    expose:
      - "8000" # <-- cambiamos ports por expose para que solo sea accesible internamente
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy

  dashboard:
    build:
      context: ./streamlit
      dockerfile: Dockerfile 
    container_name: load_dashboard
    command: streamlit run dashboard.py --server.port 8501 --server.address 0.0.0.0
    expose:
      - "8501"
    depends_on:
      - api
    volumes:
      - ./streamlit:/app
    working_dir: /app

  caddy:
    image: caddy:latest
    container_name: caddy_proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - api
      - dashboard

volumes:
  caddy_data:
  caddy_config: